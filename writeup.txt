Part - a:

We modeled the given problem as csp, in which pairs (slot, day) are variables and Nurses (0 to N - 1) are domain values. We implemented backtracking search with forward checking.
Selecting Unassigned Variables: The unassigned variables with least number of domain values are selected. We used 'Rest slot' to break ties among unassigned variables. This will help function to fail fast and move towards solution early.
Ordering Domain Values: If we are assigning nurses to 'Rest slot', we gave preference to those nurses who are not alloted any rest slot in the week. This will help to satisfy rest constraint quickly.
The backtracking function will return a consistent solution (if exits) in which all (slot, day) pairs are assigned a nurse.

Part - b:

Here, we changed the order of domain values. If the slots are Morning ('M') and Evening ('E'), we gave preference to Senior nurses and if slots are Afternoon ('A') and Rest ('R') we gave preference to other nurses. This way we can increase the weight of the solution. 
